{"ast":null,"code":"export const login = credential => {\n  const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\n  return fetch(loginUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\"\n  }).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to log in\");\n    }\n  });\n};\nexport const register = data => {\n  const registerUrl = `/signup`;\n  return fetch(registerUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    // credentials: \"include\",\n    body: JSON.stringify(data)\n  }).then(response => {\n    if (response.status !== 201) {\n      throw Error(\"Fail to register\");\n    }\n  });\n};\nexport const businessLogin = credential => {\n  const loginUrl = `/business/login?username=${credential.username}&password=${credential.password}`;\n  return fetch(loginUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\"\n  }).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to log in\");\n    }\n  });\n};\nexport const businessRegister = data => {\n  const registerUrl = `/signup/business`;\n  return fetch(registerUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    // credentials: \"include\",\n    body: JSON.stringify(data)\n  }).then(response => {\n    if (response.status !== 201) {\n      throw Error(\"Fail to register\");\n    }\n  });\n};\nexport const getMenus = restId => {\n  return fetch(`/restaurant/${restId}/menu`).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get menus\");\n    }\n\n    return response.json();\n  });\n};\nexport const getRestaurants = () => {\n  return fetch(\"/restaurants\").then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get restaurants\");\n    }\n\n    return response.json();\n  });\n};\nexport const getCart = () => {\n  return fetch(\"/cart\").then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get shopping cart data\");\n    }\n\n    return response.json();\n  });\n};\nexport const checkout = () => {\n  return fetch(\"/checkout\").then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to checkout\");\n    }\n  });\n};\nexport const addItemToCart = itemId => {\n  return fetch(`/order/${itemId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\"\n  }).then(response => {\n    if (response.status !== 201) {\n      throw Error(\"Fail to add menu item to shopping cart\");\n    }\n  });\n};\nexport const removeItemFromCart = itemId => {\n  return fetch(`/order/${itemId}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\"\n  }).then(response => {\n    if (response.status !== 202) {\n      throw Error(\"Fail to remove menu item to shopping cart\");\n    }\n  });\n};","map":{"version":3,"sources":["D:/LaiOffer/onlineorderfe/src/utils.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","register","data","registerUrl","body","JSON","stringify","businessLogin","businessRegister","getMenus","restId","json","getRestaurants","getCart","checkout","addItemToCart","itemId","removeItemFromCart"],"mappings":"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","sourcesContent":["export const login = (credential) => {\r\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\r\n   \r\n    return fetch(loginUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    }).then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to log in\");\r\n      }\r\n    });\r\n  };\r\n\r\n  export const register = (data) => {\r\n    const registerUrl = `/signup`;\r\n   \r\n    return fetch(registerUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n     // credentials: \"include\",\r\n      body: JSON.stringify(data),\r\n    }).then((response) => {\r\n      if (response.status !== 201) {\r\n        throw Error(\"Fail to register\");\r\n      }\r\n    });\r\n  };\r\n  \r\n  export const businessLogin = (credential) => {\r\n    const loginUrl = `/business/login?username=${credential.username}&password=${credential.password}`;\r\n   \r\n    return fetch(loginUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    }).then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to log in\");\r\n      }\r\n    });\r\n  };\r\n\r\n  export const businessRegister = (data) => {\r\n    const registerUrl = `/signup/business`;\r\n   \r\n    return fetch(registerUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n     // credentials: \"include\",\r\n      body: JSON.stringify(data),\r\n    }).then((response) => {\r\n      if (response.status !== 201) {\r\n        throw Error(\"Fail to register\");\r\n      }\r\n    });\r\n  };\r\n\r\n  export const getMenus = (restId) => {\r\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to get menus\");\r\n      }\r\n   \r\n      return response.json();\r\n    });\r\n  };\r\n   \r\n  export const getRestaurants = () => {\r\n    return fetch(\"/restaurants\").then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to get restaurants\");\r\n      }\r\n   \r\n      return response.json();\r\n    });\r\n  };\r\n   \r\n  export const getCart = () => {\r\n    return fetch(\"/cart\").then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to get shopping cart data\");\r\n      }\r\n   \r\n      return response.json();\r\n    });\r\n  };\r\n   \r\n  export const checkout = () => {\r\n    return fetch(\"/checkout\").then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to checkout\");\r\n      }\r\n    });\r\n  };\r\n   \r\n  export const addItemToCart = (itemId) => {\r\n    return fetch(`/order/${itemId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    }).then((response) => {\r\n      if (response.status !== 201) {\r\n        throw Error(\"Fail to add menu item to shopping cart\");\r\n      }\r\n    });\r\n  };\r\n\r\n  export const removeItemFromCart = (itemId) => {\r\n    return fetch(`/order/${itemId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    }).then((response) => {\r\n      if (response.status !== 202) {\r\n        throw Error(\"Fail to remove menu item to shopping cart\");\r\n      }\r\n    });\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}